import * as autoBid from "./auto-bid/structs";
import * as tailsStaking from "./tails-staking/structs";
import * as tdsAuthorizedEntry from "./tds-authorized-entry/structs";
import * as tdsFeePoolEntry from "./tds-fee-pool-entry/structs";
import * as tdsRegistryAuthorizedEntry from "./tds-registry-authorized-entry/structs";
import * as tdsViewFunction from "./tds-view-function/structs";
import * as typusDovSingle from "./typus-dov-single/structs";
import { StructClassLoader } from "../../../_framework/loader";

export function registerClasses(loader: StructClassLoader) {
    loader.register(typusDovSingle.Config);
    loader.register(typusDovSingle.Registry);
    loader.register(typusDovSingle.ActivateEvent);
    loader.register(typusDovSingle.AdditionalConfig);
    loader.register(typusDovSingle.ClaimEvent);
    loader.register(typusDovSingle.CloseEvent);
    loader.register(typusDovSingle.CompoundEvent);
    loader.register(typusDovSingle.DeliveryEvent);
    loader.register(typusDovSingle.DeliveryInfo);
    loader.register(typusDovSingle.DeliveryInfos);
    loader.register(typusDovSingle.DepositEvent);
    loader.register(typusDovSingle.DepositSnapshot);
    loader.register(typusDovSingle.DropVaultEvent);
    loader.register(typusDovSingle.ExerciseEvent);
    loader.register(typusDovSingle.HarvestEvent);
    loader.register(typusDovSingle.Info);
    loader.register(typusDovSingle.NewAuctionEvent);
    loader.register(typusDovSingle.NewBidEvent);
    loader.register(typusDovSingle.OracleInfo);
    loader.register(typusDovSingle.OtcEvent);
    loader.register(typusDovSingle.PayoffConfig);
    loader.register(typusDovSingle.PortfolioVault);
    loader.register(typusDovSingle.RaiseFundEvent);
    loader.register(typusDovSingle.RecoupEvent);
    loader.register(typusDovSingle.RedeemEvent);
    loader.register(typusDovSingle.ReduceFundEvent);
    loader.register(typusDovSingle.RefreshDepositSnapshotEvent);
    loader.register(typusDovSingle.RefundEvent);
    loader.register(typusDovSingle.ResumeEvent);
    loader.register(typusDovSingle.SettleEvent);
    loader.register(typusDovSingle.SettlementInfo);
    loader.register(typusDovSingle.SkipEvent);
    loader.register(typusDovSingle.TYPUS_DOV_SINGLE);
    loader.register(typusDovSingle.TerminateAuctionEvent);
    loader.register(typusDovSingle.TerminateVaultEvent);
    loader.register(typusDovSingle.TransferBidReceiptEvent);
    loader.register(typusDovSingle.UnsubscribeEvent);
    loader.register(typusDovSingle.VaultConfig);
    loader.register(typusDovSingle.WithdrawEvent);
    loader.register(typusDovSingle.WitnessOtcEvent);
    loader.register(tdsViewFunction.DepositShare);
    loader.register(autoBid.AddAuthorutyEvent);
    loader.register(autoBid.AutoBidEvent);
    loader.register(autoBid.CloseStrategyEvent);
    loader.register(autoBid.CloseStrategyEventV2);
    loader.register(autoBid.NewStrategyEvent);
    loader.register(autoBid.NewStrategyEventV2);
    loader.register(autoBid.NewStrategyPoolEvent);
    loader.register(autoBid.NewStrategySignalEvent);
    loader.register(autoBid.NewStrategyVaultEvent);
    loader.register(autoBid.RemoveStrategyVaultEvent);
    loader.register(autoBid.Strategy);
    loader.register(autoBid.StrategyPool);
    loader.register(autoBid.StrategyPoolV2);
    loader.register(autoBid.StrategyV2);
    loader.register(autoBid.UpdateStrategyEvent);
    loader.register(autoBid.WithdrawProfitEvent);
    loader.register(tailsStaking.LevelUpEvent);
    loader.register(tailsStaking.ClaimProfitSharingEvent);
    loader.register(tailsStaking.NftExtension);
    loader.register(tailsStaking.WithdrawEvent);
    loader.register(tailsStaking.ClaimProfitSharingEventV2);
    loader.register(tailsStaking.DailyAttendEvent);
    loader.register(tailsStaking.Partner);
    loader.register(tailsStaking.PartnerKey);
    loader.register(tailsStaking.ProfitSharing);
    loader.register(tailsStaking.ProfitSharingEvent);
    loader.register(tailsStaking.SnapshotNftEvent);
    loader.register(tailsStaking.StakeNftEvent);
    loader.register(tailsStaking.TransferNftEvent);
    loader.register(tailsStaking.UnstakeNftEvent);
    loader.register(tailsStaking.UpdateDepositEvent);
    loader.register(tailsStaking.UpdateUrlEvent);
    loader.register(tdsAuthorizedEntry.AddPortfolioVaultAuthorizedUserEvent);
    loader.register(tdsAuthorizedEntry.FixedIncentiviseEvent);
    loader.register(tdsAuthorizedEntry.RemovePortfolioVaultAuthorizedUserEvent);
    loader.register(tdsAuthorizedEntry.UpdateActiveVaultConfigEvent);
    loader.register(tdsAuthorizedEntry.UpdateAuctionConfigEvent);
    loader.register(tdsAuthorizedEntry.UpdateConfigEvent);
    loader.register(tdsAuthorizedEntry.UpdateStrikeEvent);
    loader.register(tdsAuthorizedEntry.UpdateWarmupVaultConfigEvent);
    loader.register(tdsAuthorizedEntry.WithdrawFixedIncentiveEvent);
    loader.register(tdsFeePoolEntry.SendFeeEvent);
    loader.register(tdsFeePoolEntry.AddFeePoolAuthorizedUserEvent);
    loader.register(tdsFeePoolEntry.AddSharedFeePoolAuthorizedUserEvent);
    loader.register(tdsFeePoolEntry.RemoveFeePoolAuthorizedUserEvent);
    loader.register(tdsFeePoolEntry.RemoveSharedFeePoolAuthorizedUserEvent);
    loader.register(tdsFeePoolEntry.TakeFeeEvent);
    loader.register(tdsFeePoolEntry.TakeSharedFeeEvent);
    loader.register(tdsRegistryAuthorizedEntry.AddAuthorizedUserEvent);
    loader.register(tdsRegistryAuthorizedEntry.AddWitnessEvent);
    loader.register(tdsRegistryAuthorizedEntry.IncentiviseEvent);
    loader.register(tdsRegistryAuthorizedEntry.NewPortfolioVaultEvent);
    loader.register(tdsRegistryAuthorizedEntry.RemoveAuthorizedUserEvent);
    loader.register(tdsRegistryAuthorizedEntry.RemoveWitnessEvent);
    loader.register(tdsRegistryAuthorizedEntry.ResumeTransactionEvent);
    loader.register(tdsRegistryAuthorizedEntry.SetAvailableIncentiveAmountEvent);
    loader.register(tdsRegistryAuthorizedEntry.SuspendTransactionEvent);
    loader.register(tdsRegistryAuthorizedEntry.UpgradeRegistryEvent);
    loader.register(tdsRegistryAuthorizedEntry.WithdrawIncentiveEvent);
}
