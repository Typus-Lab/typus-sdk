"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerClasses = registerClasses;
var authenticatorState = __importStar(require("./authenticator-state/structs"));
var bag = __importStar(require("./bag/structs"));
var balance = __importStar(require("./balance/structs"));
var bcs = __importStar(require("./bcs/structs"));
var bls12381 = __importStar(require("./bls12381/structs"));
var borrow = __importStar(require("./borrow/structs"));
var clock = __importStar(require("./clock/structs"));
var coin = __importStar(require("./coin/structs"));
var denyList = __importStar(require("./deny-list/structs"));
var display = __importStar(require("./display/structs"));
var dynamicField = __importStar(require("./dynamic-field/structs"));
var dynamicObjectField = __importStar(require("./dynamic-object-field/structs"));
var groth16 = __importStar(require("./groth16/structs"));
var groupOps = __importStar(require("./group-ops/structs"));
var kioskExtension = __importStar(require("./kiosk-extension/structs"));
var kiosk = __importStar(require("./kiosk/structs"));
var linkedTable = __importStar(require("./linked-table/structs"));
var objectBag = __importStar(require("./object-bag/structs"));
var objectTable = __importStar(require("./object-table/structs"));
var object = __importStar(require("./object/structs"));
var package_ = __importStar(require("./package/structs"));
var priorityQueue = __importStar(require("./priority-queue/structs"));
var random = __importStar(require("./random/structs"));
var sui = __importStar(require("./sui/structs"));
var tableVec = __importStar(require("./table-vec/structs"));
var table = __importStar(require("./table/structs"));
var token = __importStar(require("./token/structs"));
var transferPolicy = __importStar(require("./transfer-policy/structs"));
var transfer = __importStar(require("./transfer/structs"));
var txContext = __importStar(require("./tx-context/structs"));
var url = __importStar(require("./url/structs"));
var vecMap = __importStar(require("./vec-map/structs"));
var vecSet = __importStar(require("./vec-set/structs"));
var versioned = __importStar(require("./versioned/structs"));
var zkloginVerifiedId = __importStar(require("./zklogin-verified-id/structs"));
var zkloginVerifiedIssuer = __importStar(require("./zklogin-verified-issuer/structs"));
function registerClasses(loader) {
    loader.register(groth16.Curve);
    loader.register(groth16.PreparedVerifyingKey);
    loader.register(groth16.ProofPoints);
    loader.register(groth16.PublicProofInputs);
    loader.register(txContext.TxContext);
    loader.register(object.ID);
    loader.register(object.UID);
    loader.register(transfer.Receiving);
    loader.register(dynamicField.Field);
    loader.register(authenticatorState.ActiveJwk);
    loader.register(authenticatorState.AuthenticatorState);
    loader.register(authenticatorState.AuthenticatorStateInner);
    loader.register(authenticatorState.JWK);
    loader.register(authenticatorState.JwkId);
    loader.register(bag.Bag);
    loader.register(balance.Balance);
    loader.register(balance.Supply);
    loader.register(bcs.BCS);
    loader.register(groupOps.Element);
    loader.register(bls12381.G1);
    loader.register(bls12381.G2);
    loader.register(bls12381.GT);
    loader.register(bls12381.Scalar);
    loader.register(borrow.Borrow);
    loader.register(borrow.Referent);
    loader.register(clock.Clock);
    loader.register(url.Url);
    loader.register(vecSet.VecSet);
    loader.register(table.Table);
    loader.register(denyList.DenyList);
    loader.register(denyList.PerTypeList);
    loader.register(coin.Coin);
    loader.register(coin.CoinMetadata);
    loader.register(coin.CurrencyCreated);
    loader.register(coin.DenyCap);
    loader.register(coin.RegulatedCoinMetadata);
    loader.register(coin.TreasuryCap);
    loader.register(vecMap.Entry);
    loader.register(vecMap.VecMap);
    loader.register(package_.Publisher);
    loader.register(package_.UpgradeCap);
    loader.register(package_.UpgradeReceipt);
    loader.register(package_.UpgradeTicket);
    loader.register(display.Display);
    loader.register(display.DisplayCreated);
    loader.register(display.VersionUpdated);
    loader.register(dynamicObjectField.Wrapper);
    loader.register(sui.SUI);
    loader.register(transferPolicy.RuleKey);
    loader.register(transferPolicy.TransferPolicy);
    loader.register(transferPolicy.TransferPolicyCap);
    loader.register(transferPolicy.TransferPolicyCreated);
    loader.register(transferPolicy.TransferPolicyDestroyed);
    loader.register(transferPolicy.TransferRequest);
    loader.register(kiosk.Borrow);
    loader.register(kiosk.Item);
    loader.register(kiosk.ItemDelisted);
    loader.register(kiosk.ItemListed);
    loader.register(kiosk.ItemPurchased);
    loader.register(kiosk.Kiosk);
    loader.register(kiosk.KioskOwnerCap);
    loader.register(kiosk.Listing);
    loader.register(kiosk.Lock);
    loader.register(kiosk.PurchaseCap);
    loader.register(kioskExtension.Extension);
    loader.register(kioskExtension.ExtensionKey);
    loader.register(linkedTable.LinkedTable);
    loader.register(linkedTable.Node);
    loader.register(objectBag.ObjectBag);
    loader.register(objectTable.ObjectTable);
    loader.register(priorityQueue.Entry);
    loader.register(priorityQueue.PriorityQueue);
    loader.register(versioned.VersionChangeCap);
    loader.register(versioned.Versioned);
    loader.register(random.Random);
    loader.register(random.RandomGenerator);
    loader.register(random.RandomInner);
    loader.register(tableVec.TableVec);
    loader.register(token.RuleKey);
    loader.register(token.ActionRequest);
    loader.register(token.Token);
    loader.register(token.TokenPolicy);
    loader.register(token.TokenPolicyCap);
    loader.register(token.TokenPolicyCreated);
    loader.register(zkloginVerifiedId.VerifiedID);
    loader.register(zkloginVerifiedIssuer.VerifiedIssuer);
}
