import * as authority from "./authority/structs";
import * as balancePool from "./balance-pool/structs";
import * as bigVector from "./big-vector/structs";
import * as dutch from "./dutch/structs";
import * as i64 from "./i64/structs";
import * as linkedList from "./linked-list/structs";
import * as vault from "./vault/structs";
import {StructClassLoader} from "../../../_framework/loader";

export function registerClasses(loader: StructClassLoader) { loader.register(bigVector.BigVector);
loader.register(authority.Authority);
loader.register(balancePool.BalanceInfo);
loader.register(balancePool.BalancePool);
loader.register(balancePool.SharedBalancePool);
loader.register(vault.Activate);
loader.register(vault.BidShare);
loader.register(vault.BidVault);
loader.register(vault.Claim);
loader.register(vault.Compound);
loader.register(vault.Delivery);
loader.register(vault.Deposit);
loader.register(vault.DepositShare);
loader.register(vault.DepositVault);
loader.register(vault.Exercise);
loader.register(vault.Harvest);
loader.register(vault.IncentiviseBidder);
loader.register(vault.NewBidVault);
loader.register(vault.NewDepositVault);
loader.register(vault.NewRefundVault);
loader.register(vault.Recoup);
loader.register(vault.Redeem);
loader.register(vault.RefundShare);
loader.register(vault.RefundVault);
loader.register(vault.Settle);
loader.register(vault.Terminate);
loader.register(vault.TypusBidReceipt);
loader.register(vault.TypusDepositReceipt);
loader.register(vault.Unsubscribe);
loader.register(vault.UpdateFeeConfig);
loader.register(vault.UpdateFeeShareConfig);
loader.register(vault.VAULT);
loader.register(vault.Withdraw);
loader.register(i64.I64);
loader.register(dutch.Delivery);
loader.register(dutch.Terminate);
loader.register(dutch.Auction);
loader.register(dutch.Bid);
loader.register(dutch.DUTCH);
loader.register(dutch.NewBid);
loader.register(dutch.RemoveBid);
loader.register(dutch.UpdateAuctionConfig);
loader.register(linkedList.Node);
loader.register(linkedList.LinkedList);
 }
